//Applicant ID: AG14K-YLZJ function Household(age, relationship, isSmoker) {  this.age = age;  this.relationship = relationship;  this.isSmoker = isSmoker;}//This function is to check user enters age correctly and relationship is required. Household.prototype.validate = function() {  var error = [];//This is to make sure the user enters only numbers.   if (isNaN(this.age)) {    error.push("Please only use numbers");  } else if (this.age <= 0) { //This is to verify the user doesn't enter 0     error.push("If age is in less than 1 year, put 1 year.");  }  if (!this.relationship) { //This is to make sure the user selects a relationship    error.push("A relationship is required");  }  return error;};//This function is to add people to husehold list. function FormManager() {  this.members = []; //This will list the household members }//This function is to add members to the list.FormManager.prototype.addMembers = function(member) {   var errors = member.validate();  if (errors.length > 0) {    throw { errors: errors };  }  this.members.push(member);};//This function is to remove members from the list. FormManager.prototype.removeMember = function(memberId) {  var index = this.members.findIndex(function(member) {    return member.id === memberId;  });  this.members.splice(index, 1);};//This function is to serialize the household as JSON upon submission.FormManager.prototype.serialize = function() {  return JSON.stringify(this.members.map(function(member) {    return {age: member.age, relationship: member.relationship, isSmoker: member.isSmoker };  }), null, 2);}